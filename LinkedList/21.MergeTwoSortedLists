/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(!l1 && !l2)
            return NULL;
        if(!l1)
            return l2;
        if(!l2)
            return l1;
        ListNode* dummy = new ListNode();
        ListNode* head = dummy;
        ListNode* temp;
        while(l1 && l2)
        {
            if(l2->val <= l1->val)
            {
                head->next = l2;
                head = head->next;
                l2 = l2->next;
            }
            else
            {
                head->next = l1;
                head = head->next;
                l1 = l1->next;
            }
        }
        if(!l1)
            head->next = l2;
        else
            head->next = l1;
        
        return dummy->next;
    }
};